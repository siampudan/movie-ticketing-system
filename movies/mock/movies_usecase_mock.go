// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/siampudan/mytop100movie/movies (interfaces: MovieUseCase)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	movies "github.com/siampudan/mytop100movie/movies"
)

// MockMovieUseCase is a mock of MovieUseCase interface.
type MockMovieUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockMovieUseCaseMockRecorder
}

// MockMovieUseCaseMockRecorder is the mock recorder for MockMovieUseCase.
type MockMovieUseCaseMockRecorder struct {
	mock *MockMovieUseCase
}

// NewMockMovieUseCase creates a new mock instance.
func NewMockMovieUseCase(ctrl *gomock.Controller) *MockMovieUseCase {
	mock := &MockMovieUseCase{ctrl: ctrl}
	mock.recorder = &MockMovieUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMovieUseCase) EXPECT() *MockMovieUseCaseMockRecorder {
	return m.recorder
}

// GetMovieDetail mocks base method.
func (m *MockMovieUseCase) GetMovieDetail(arg0 *gin.Context) (movies.Movie, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMovieDetail", arg0)
	ret0, _ := ret[0].(movies.Movie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMovieDetail indicates an expected call of GetMovieDetail.
func (mr *MockMovieUseCaseMockRecorder) GetMovieDetail(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMovieDetail", reflect.TypeOf((*MockMovieUseCase)(nil).GetMovieDetail), arg0)
}
